#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""This file is part of the prometeo project.

This program is free software: you can redistribute it and/or modify it 
under the terms of the GNU Lesser General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
"""

__author__ = 'Emanuele Bertoldi <emanuele.bertoldi@gmail.com>'
__copyright__ = 'Copyright (c) 2011 Emanuele Bertoldi'
__version__ = '0.0.2'

import os
import datetime

from pytz import common_timezones

_ = lambda x: x

PROJECT_PATH = os.path.dirname(os.path.abspath(__file__))
THEME_PATH = os.path.join(PROJECT_PATH, 'themes', 'default')

DEBUG = True

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONES = [(tz, tz) for tz in common_timezones]
TIME_ZONE = 'GMT'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = PROJECT_PATH + '/media/'

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = '/files/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = THEME_PATH + '/static/'

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

# URL prefix for admin static files -- CSS, JavaScript and images.
# Make sure to use a trailing slash.
# Examples: "http://foo.com/static/admin/", "/static/admin/".
ADMIN_MEDIA_PREFIX = '/static/admin/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Make this unique, and don't share it with anybody.
SECRET_KEY = '*7n%@x9c-#f6qn0@(t&7vrx-ddk8fel8fs3xx27wu+dul4rppf'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

# List of processors used by RequestContext to populate the context.
# Each one should be a callable that takes the request object as its
# only parameter and returns a dictionary to add to the context.
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.request',
    'django.contrib.messages.context_processors.messages',

    'prometeo.core.auth.context_processors.auth',
)

# List of middleware classes to use.  Order is important; in the request phase,
# this middleware classes will be applied in the order given, and in the
# response phase the middleware will be applied in reverse order.
MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.contrib.redirects.middleware.RedirectFallbackMiddleware',

    'prometeo.core.auth.middleware.RequireLoginMiddleware',
)

# Root for URL dispatcher.
ROOT_URLCONF = PROJECT_PATH.split(os.sep)[-1] + '.urls'

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

# List of search path for templates.
TEMPLATE_DIRS = (
    (os.path.join(THEME_PATH, "templates")),
)

# List of installed applications.
INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.comments',
    'django.contrib.markup',
    'django.contrib.redirects',

    'prometeo.core',
    'prometeo.core.filebrowser',
    'prometeo.core.widgets',
    'prometeo.core.menus',
    'prometeo.core.auth',
    'prometeo.core.registration',
    'prometeo.core.notifications',
    'prometeo.core.streams',
    'prometeo.core.taxonomy',

    #'prometeo.events',
    #'prometeo.todo',
    #'prometeo.addressing',
    #'prometeo.partners',
    #'prometeo.documents',
    #'prometeo.products',
    #'prometeo.projects',
)

# Authentication management options.
AUTH_PROFILE_MODULE = 'auth.UserProfile'
AUTH_EXPIRATION_DAYS = 2

LOGIN_URL = '/users/login'
LOGOUT_URL = '/users/logout'
LOGIN_REDIRECT_URL = '/users/logged/'

LOGIN_REQUIRED_URLS = (
    r'/(.*)$',
)

LOGIN_REQUIRED_URLS_EXCEPTIONS = (
    r'/static/(.*)$',
    r'/users/login/$',
    r'/users/register/$',
    r'/users/activate/(.*)$',
)

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'prometeo.core.auth.backends.ObjectPermissionBackend',
)

# Taxonomy management options.
SEARCH_IN_MODELS = (
    'auth.User',
    'taxonomy.Category',
    'taxonomy.Tag',
    #'events.Event',
    #'todo.Task',
    #'addressing.Address',
    #'addressing.PhoneNumber',
    #'partners.Contact',
    #'partners.Partner',
    #'documents.Document',
    #'products.Product',
    #'products.Supply',
    #'projects.Project',
    #'projects.Area',
    #'projects.Milestone',
    #'projects.Ticket',
)

# Events management options.
"""
EVENT_STATUS_CHOICES = (
    ('TENTATIVE', _('tentative')),
    ('CONFIRMED', _('confirmed')),
    ('CANCELLED', _('cancelled')),
)

EVENT_DEFAULT_STATUS = 'CONFIRMED'
"""

# ToDo managements options.
"""
TIMESHEET_STATUS_CHOICES = (
    ('DRAFT', _('draft')),
    ('CONFIRMED', _('confirmed'))
)

TIMESHEET_DEFAULT_STATUS = 'DRAFT'

WORKING_DAY_START = datetime.time(9, 0)
WORKING_DAY_END = datetime.time(18, 30)

LAUNCH_TIME_START = datetime.time(13, 0)
LAUNCH_TIME_END = datetime.time(14, 30)
"""

# Addressing management options.
"""
ADDRESS_TYPES = (
    ('0', _('preferred')),
    ('1', _('invoice')),
    ('2', _('delivery')),
    ('3', _('other'))
)

DEFAULT_ADDRESS_TYPE = '0'

PHONE_TYPES = (
    ('0', _('land Line')),
    ('1', _('mobile')),
    ('2', _('fax'))
)

DEFAULT_PHONE_TYPE = '0'
"""

# Partners management options.
"""
LEAD_STATUS_CHOICES = (
    ('FIRST', _('first contact')),
)

LEAD_DEFAULT_STATUS = 'FIRST'

CURRENCIES = (
    ('AED', _('AED')),
    ('AFN', _('AFN')),
    ('ALL', _('ALL')),
    ('AMD', _('AMD')),
    ('ANG', _('ANG')),
    ('AOA', _('AOA')),
    ('ARS', _('ARS')),
    ('AUD', _('AUD')),
    ('AZN', _('AZN')),
    ('BAM', _('BAM')),
    ('BBD', _('BBD')),
    ('BDT', _('BDT')),
    ('BGN', _('BGN')),
    ('BHD', _('BHD')),
    ('BIF', _('BIF')),
    ('BMD', _('BMD')),
    ('BND', _('BND')),
    ('BOB', _('BOB')),
    ('BRL', _('BRL')),
    ('BSD', _('BSD')),
    ('BTN', _('BTN')),
    ('BWP', _('BWP')),
    ('BYR', _('BYR')),
    ('BZD', _('BZD')),
    ('CAD', _('CAD')),
    ('CDF', _('CDF')),
    ('CFA', _('CFA')),
    ('CFP', _('CFP')),
    ('CHF', _('CHF')),
    ('CLP', _('CLP')),
    ('CNY', _('CNY')),
    ('COP', _('COP')),
    ('CRC', _('CRC')),
    ('CUC', _('CUC')),
    ('CZK', _('CZK')),
    ('DJF', _('DJF')),
    ('DKK', _('DKK')),
    ('DOP', _('DOP')),
    ('DZD', _('DZD')),
    ('EEK', _('EEK')),
    ('EGP', _('EGP')),
    ('ERN', _('ERN')),
    ('ETB', _('ETB')),
    ('EUR', _('EUR')),
    ('FJD', _('FJD')),
    ('FKP', _('FKP')),
    ('FMG', _('FMG')),
    ('GBP', _('GBP')),
    ('GEL', _('GEL')),
    ('GHS', _('GHS')),
    ('GIP', _('GIP')),
    ('GMD', _('GMD')),
    ('GNF', _('GNF')),
    ('GQE', _('GQE')),
    ('GTQ', _('GTQ')),
    ('GYD', _('GYD')),
    ('HKD', _('HKD')),
    ('HNL', _('HNL')),
    ('HRK', _('HRK')),
    ('HTG', _('HTG')),
    ('HUF', _('HUF')),
    ('IDR', _('IDR')),
    ('ILS', _('ILS')),
    ('INR', _('INR')),
    ('IQD', _('IQD')),
    ('IRR', _('IRR')),
    ('ISK', _('ISK')),
    ('JMD', _('JMD')),
    ('JOD', _('JOD')),
    ('JPY', _('JPY')),
    ('KES', _('KES')),
    ('KGS', _('KGS')),
    ('KHR', _('KHR')),
    ('KMF', _('KMF')),
    ('KPW', _('KPW')),
    ('KRW', _('KRW')),
    ('KWD', _('KWD')),
    ('KYD', _('KYD')),
    ('KZT', _('KZT')),
    ('LAK', _('LAK')),
    ('LBP', _('LBP')),
    ('LKR', _('LKR')),
    ('LRD', _('LRD')),
    ('LSL', _('LSL')),
    ('LTL', _('LTL')),
    ('LVL', _('LVL')),
    ('LYD', _('LYD')),
    ('MAD', _('MAD')),
    ('MDL', _('MDL')),
    ('MGA', _('MGA')),
    ('MKD', _('MKD')),
    ('MMK', _('MMK')),
    ('MNT', _('MNT')),
    ('MOP', _('MOP')),
    ('MRO', _('MRO')),
    ('MUR', _('MUR')),
    ('MVR', _('MVR')),
    ('MWK', _('MWK')),
    ('MXN', _('MXN')),
    ('MYR', _('MYR')),
    ('MZM', _('MZM')),
    ('NAD', _('NAD')),
    ('NGN', _('NGN')),
    ('NIO', _('NIO')),
    ('NOK', _('NOK')),
    ('NPR', _('NPR')),
    ('NRs', _('NRs')),
    ('NZD', _('NZD')),
    ('OMR', _('OMR')),
    ('PAB', _('PAB')),
    ('PEN', _('PEN')),
    ('PGK', _('PGK')),
    ('PHP', _('PHP')),
    ('PKR', _('PKR')),
    ('PLN', _('PLN')),
    ('PYG', _('PYG')),
    ('QAR', _('QAR')),
    ('RMB', _('RMB')),
    ('RON', _('RON')),
    ('RSD', _('RSD')),
    ('RUB', _('RUB')),
    ('RWF', _('RWF')),
    ('SAR', _('SAR')),
    ('SCR', _('SCR')),
    ('SDG', _('SDG')),
    ('SDR', _('SDR')),
    ('SEK', _('SEK')),
    ('SGD', _('SGD')),
    ('SHP', _('SHP')),
    ('SOS', _('SOS')),
    ('SRD', _('SRD')),
    ('STD', _('STD')),
    ('SYP', _('SYP')),
    ('SZL', _('SZL')),
    ('THB', _('THB')),
    ('TJS', _('TJS')),
    ('TMT', _('TMT')),
    ('TND', _('TND')),
    ('TRY', _('TRY')),
    ('TTD', _('TTD')),
    ('TWD', _('TWD')),
    ('TZS', _('TZS')),
    ('UAE', _('UAE')),
    ('UAH', _('UAH')),
    ('UGX', _('UGX')),
    ('USD', _('USD')),
    ('UYU', _('UYU')),
    ('UZS', _('UZS')),
    ('VEB', _('VEB')),
    ('VND', _('VND')),
    ('VUV', _('VUV')),
    ('WST', _('WST')),
    ('XAF', _('XAF')),
    ('XCD', _('XCD')),
    ('XDR', _('XDR')),
    ('XOF', _('XOF')),
    ('XPF', _('XPF')),
    ('YEN', _('YEN')),
    ('YER', _('YER')),
    ('YTL', _('YTL')),
    ('ZAR', _('ZAR')),
    ('ZMK', _('ZMK')),
    ('ZWR', _('ZWR')),
)

DEFAULT_CURRENCY = 'EUR'

ROLES = (
    ('CEO', _("CEO")),
    ('COO', _("COO")),
    ('CFO', _("CFO")),
    ('CTO', _("CTO")),
    ('PROJMANAGER', _("Project Manager")),
    ('SALESMANAGER', _("Sales Manager")),
    ('SALESMAN', _("Salesman")),
    ('EMPLOYEE', _("Employee")),
)

DEFAULT_ROLE = 'EMPLOYEE'
"""

# Products management options.
"""
PRODUCT_UOM_CHOICES = (
    ('BG', _('Bag')),
    ('BR', _('Barrel')),
    ('BL', _('Block')),
    ('B8', _('Board')),
    ('BF', _('Board Feet')),
    ('BO', _('Bottle')),
    ('BX', _('Box')),
    ('BN', _('Bulk')),
    ('BD', _('Bundle')),
    ('CG', _('Card')),
    ('CT', _('Carton')),
    ('CQ', _('Cartridge')),
    ('CA', _('Case')),
    ('C3', _('Centigram')),
    ('CM', _('Centiliter')),
    ('1N', _('Count')),
    ('CC', _('Cubic Centimeter')),
    ('C8', _('Cubic Decimeter')),
    ('CF', _('Cubic Feet')),
    ('CI', _('Cubic Inches')),
    ('CR', _('Cubic Meter')),
    ('MMQ', _('Cubic Milimetre')),
    ('DA', _('Days')),
    ('DG', _('Decigram')),
    ('DL', _('Deciliter')),
    ('DM', _('Decimeter')),
    ('CE', _('Degrees Celsius')),
    ('FA', _('Degrees Fahrenheit')),
    ('DZ', _('Dozen')),
    ('FT', _('Feet')),
    ('UZ', _('Fifty Count')),
    ('UY', _('Fifty Square Feet')),
    ('FO', _('Fluid Ounce')),
    ('GA', _('Gallon')),
    ('GR', _('Gram')),
    ('GT', _('Gross Kilogram')),
    ('HD', _('Half Dozen')),
    ('HC', _('Houndred Count')),
    ('HL', _('Houndred Feet')),
    ('CW', _('Houndred Pounds')),
    ('IN', _('Inches')),
    ('JR', _('Jar')),
    ('KG', _('Kilogram')),
    ('DK', _('Kilometer')),
    ('KT', _('Kit')),
    ('LT', _('Liter')),
    ('MR', _('Meter')),
    ('MP', _('Metric Ton')),
    ('MC', _('Microgram')),
    ('4G', _('Microliter')),
    ('ME', _('Miligram')),
    ('ML', _('Mililiter')),
    ('MM', _('Milimeter')),
    ('OZ', _('Ounces')),
    ('PH', _('Pack')),
    ('PK', _('Package')),
    ('PA', _('Pail')),
    ('PR', _('Pair')),
    ('PL', _('Pallet')),
    ('P1', _('Percent')),
    ('PC', _('Piece')),
    ('PT', _('Pint')),
    ('PTN', _('Portion')),
    ('V2', _('Pouch')),
    ('ST', _('Set')),
    ('SH', _('Sheet')),
    ('SF', _('Square Foot')),
    ('SM', _('Square Meter')),
    ('SY', _('Square Yard')),
    ('TK', _('Tank')),
    ('TM', _('Thousand Feet')),
    ('UN', _('Unit')),
    ('YD', _('Yard')),
)

PRODUCT_DEFAULT_UOM = 'UN'

PRODUCT_SUPPLY_METHODS = (
    ('PUR', _('Purchase')),
    ('PROD', _('Production'))
)

PRODUCT_DEFAULT_SUPPLY_METHOD = 'PUR'

PRODUCT_DEFAULT_PAYMENT_TERMS = 30

PRODUCT_DEFAULT_WARRANTY_PERIOD = 730
"""

# Project management options.
"""
PROJECT_STATUS_CHOICES = (
    ('OPEN', _('open')),
    ('CLOSED', _('closed')),
)

PROJECT_DEFAULT_STATUS = 'OPEN'

PROJECT_CLOSE_STATUSES = ('CLOSED',)

TICKET_URGENCY_CHOICES = (
    ('VERY-LOW', _('very low')),
    ('LOW', _('low')),
    ('MEDIUM', _('medium')),
    ('HIGH', _('high')),
    ('CRITICAL', _('critical')),
)

TICKET_DEFAULT_URGENCY = 'MEDIUM'

TICKET_TYPE_CHOICES = (
    ('BUG', _('bug')),
    ('TASK', _('task')),
    ('IDEA', _('idea')),
)

TICKET_DEFAULT_TYPE = 'BUG'

TICKET_STATUS_CHOICES = (
    ('NEW', _('new')),
    ('TESTS', _('needs tests')),
    ('ACCEPTED', _('accepted')),
    ('INVALID', _("invalid")),
    ('DUPLICATE', _('duplicated')),
    ('RESOLVED', _('resolved')),
    ('REVIEW', _('awaiting review')),
)

TICKET_DEFAULT_STATUS = 'NEW'

TICKET_CLOSE_STATUSES = ('INVALID', 'DUPLICATE', 'RESOLVED')
"""
